<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lobby/backstage/wallet.proto

namespace Backstage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * WalletResponse, will return orderId with last balance while the operation succeed
 * if the operation was failed will throw error of rpc instead
 *
 * Generated from protobuf message <code>backstage.WalletResponse</code>
 */
class WalletResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string orderId = 1;</code>
     */
    protected $orderId = '';
    /**
     * Generated from protobuf field <code>double balance = 2;</code>
     */
    protected $balance = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $orderId
     *     @type float $balance
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lobby\Backstage\Wallet::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string orderId = 1;</code>
     * @return string
     */
    public function getOrderId()
    {
        return $this->orderId;
    }

    /**
     * Generated from protobuf field <code>string orderId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOrderId($var)
    {
        GPBUtil::checkString($var, True);
        $this->orderId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double balance = 2;</code>
     * @return float
     */
    public function getBalance()
    {
        return $this->balance;
    }

    /**
     * Generated from protobuf field <code>double balance = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setBalance($var)
    {
        GPBUtil::checkDouble($var);
        $this->balance = $var;

        return $this;
    }

}

